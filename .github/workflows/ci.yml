name: CI

on:
  push:
    branches: [ development ]
  pull_request:
    branches: [ development ]

jobs:
  # ======================
  # BACKEND — BUILD
  # ======================
  backend_build:
    name: Backend — Build (.NET)
    runs-on: windows-latest
    defaults:
      run:
        working-directory: Backend/STMS.Api
    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Restore
        run: dotnet restore

      - name: Build (Release)
        run: dotnet build -c Release --no-restore

      - name: Publish (self-contained folder)
        run: dotnet publish -c Release -o ../../artifacts/backend --no-build

      - name: Upload backend artifact
        uses: actions/upload-artifact@v4
        with:
          name: backend_publish
          path: artifacts/backend/
          retention-days: 7

  # ======================
  # BACKEND — TEST
  # ======================
  backend_test:
    name: Backend — Test (.NET)
    needs: backend_build
    runs-on: windows-latest
    defaults:
      run:
        working-directory: Backend/STMS.Api
    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Test
        run: dotnet test -c Release --no-build --verbosity normal

  # ======================
  # BACKEND — VERIFY
  # ======================
  backend_verify:
    name: Backend — Verify artifact
    needs: backend_test
    runs-on: ubuntu-latest
    steps:
      - name: Download backend artifact
        uses: actions/download-artifact@v4
        with:
          name: backend_publish
          path: backend_publish

      - name: Smoke check — DLL exists
        run: |
          ls -la backend_publish | head -n 200
          test -n "$(ls -1 backend_publish/*.dll 2>/dev/null)" || { echo "❌ No DLLs found in backend_publish/"; exit 1; }
          echo "✅ Backend artifact looks OK"

  # ======================
  # FRONTEND — BUILD
  # ======================
  frontend_build:
    name: Frontend — Build (Node + pnpm)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: Frontend
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build
        run: pnpm run build

      - name: Upload frontend artifact (dist/)
        uses: actions/upload-artifact@v4
        with:
          name: frontend_dist
          path: Frontend/dist/
          retention-days: 7

  # ======================
  # FRONTEND — TEST
  # ======================
  frontend_test:
    name: Frontend — Test (pnpm)
    needs: frontend_build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: Frontend
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Test
        run: npm run test:run

  # ======================
  # FRONTEND — VERIFY
  # ======================
  frontend_verify:
    name: Frontend — Verify artifact
    needs: frontend_test
    runs-on: ubuntu-latest
    steps:
      - name: Download frontend artifact
        uses: actions/download-artifact@v4
        with:
          name: frontend_dist
          path: dist

      - name: Smoke check — dist/index.html exists
        run: |
          ls -la dist | head -n 200
          test -f dist/index.html || { echo "dist/index.html missing"; exit 1; }
          echo "Frontend artifact looks OK"
