name: Build and Push Containers

on:
  push:
    branches: [main]
    paths:
      - 'Backend/**'
      - 'Frontend/**'
      - 'stms.sln'
      - '.github/workflows/*.yml'
      - 'Backend/STMS.Api/Dockerfile'
      - 'Frontend/Dockerfile'
      - 'Dockerfile'

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Compute lowercase repo owner
        id: owner
        run: |
          owner="${{ github.repository_owner }}"
          owner_lower=$(echo "$owner" | tr '[:upper:]' '[:lower:]')
          echo "owner_lower=$owner_lower" >> $GITHUB_OUTPUT

      - name: Set image registry variable
        id: registry
        run: |
          owner=${{ steps.owner.outputs.owner_lower }}
          echo "IMAGE_REGISTRY=ghcr.io/$owner" >> $GITHUB_ENV
          echo "IMAGE_TAG=latest" >> $GITHUB_ENV
          echo "IMAGE_SHA_TAG=${{ github.sha }}" >> $GITHUB_ENV

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Ensure docker compose is available
        run: |
          # Ubuntu runners include Docker but ensure the compose plugin is available
          if ! docker compose version >/dev/null 2>&1; then
            echo "docker compose not found, installing docker-compose-plugin"
            sudo apt-get update && sudo apt-get install -y docker-compose-plugin
          fi

      - name: Build images with docker compose
        env:
          IMAGE_REGISTRY: ${{ env.IMAGE_REGISTRY }}
        run: |
          set -euo pipefail
          docker compose -f docker-compose.yml build --pull --progress=plain

      - name: Push images built by docker compose
        env:
          IMAGE_REGISTRY: ${{ env.IMAGE_REGISTRY }}
        run: |
          set -euo pipefail
          # Push the images that were built by docker compose. Compose will push the images
          # referenced by the image names in the compose file.
          docker compose -f docker-compose.yml push || true

      - name: Tag images with sha and push
        env:
          IMAGE_REGISTRY: ${{ env.IMAGE_REGISTRY }}
        run: |
          set -euo pipefail
          echo "Pushing images from docker-compose with registry=${IMAGE_REGISTRY}"

          # The compose file set images to ${IMAGE_REGISTRY}/stms-backend:latest and
          # ${IMAGE_REGISTRY}/stms-frontend:latest. Retag with the commit SHA and push.

          docker image tag ${IMAGE_REGISTRY}/stms-backend:latest ${IMAGE_REGISTRY}/stms-backend:${IMAGE_SHA_TAG}
          docker image tag ${IMAGE_REGISTRY}/stms-frontend:latest ${IMAGE_REGISTRY}/stms-frontend:${IMAGE_SHA_TAG}

          docker push ${IMAGE_REGISTRY}/stms-backend:latest
          docker push ${IMAGE_REGISTRY}/stms-backend:${IMAGE_SHA_TAG}
          docker push ${IMAGE_REGISTRY}/stms-frontend:latest
          docker push ${IMAGE_REGISTRY}/stms-frontend:${IMAGE_SHA_TAG}
